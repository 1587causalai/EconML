name: GitHub Actions Test
on: [push]
jobs:
  eval_changes:
    runs-on: ubuntu-latest  
    name: Test changed-files
    outputs:
      code_changes: ${{ steps.check_changes.outputs.code_changes }}
      doc_changes: ${{ steps.check_changes.outputs.doc_changes }}
      nb_changes: ${{ steps.check_changes.outputs.nb_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - id: check_changes
        run: |
          echo "=============== list modified files ==============="
          editedFiles=`git diff --name-only HEAD^ --name-only`
          echo "$editedFiles"

          echo "========== check paths of modified files =========="
          codeChanges=false
          docChanges=false
          nbChanges=false
          for file in "$editedFiles"; do
            echo $file
            case $file in 
            README.md) continue ;;
            econml/_version.py) continue ;;
            prototypes/*) continue ;;
            images/*) continue ;;
            doc/*) docChanges=true ;;
            notebooks/*)  nbChanges=true ;;
            *) codeChanges=true ;;
            esac
          done 

          echo "========== Change Summary =========="
          echo "Code Changes"
          if $codeChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi
          echo "Doc Changes"
          if $docChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi
          echo "Notebook Changes"
          if $nbChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi

          echo "::set-output name=code_changes::$codeChanges"
          echo "::set-output name=doc_changes::$docChanges"
          echo "::set-output name=nb_changes::$nbChanges"
  linting: 
    name: Linting
    runs-on: ubuntu-18.04
    needs: eval_changes
    if: ${{ needs.eval_changes.outputs.code_changes }}
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install and Run pycodestyle
        run: pip install pycodestyle && pycodestyle econml
        

  build_documentation:
    name: Build Documentation
    runs-on: ubuntu-18.04
    needs: eval_changes
    if: ${{ needs.eval_changes.outputs.doc_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install EconML
        run: pip install -e .[all]
      - name: Install graphviz
        run: sudo apt-get -yq install graphviz
      - name: Install lightning
        run: pip install sklearn-contrib-lightning
      - name: Install specific version of shap
        run: pip install git+https://github.com/slundberg/shap.git@d1d2700acc0259f211934373826d5ff71ad514de
      - name: Install sphinx
        run: pip install sphinx sphinx_rtd_theme
      - name: Build documentation
        run: python setup.py build_sphinx -W
      - name: Publish documentation as an artifact
        uses: actions/upload-artifact@v1
        with:
          name: Documentation
          path: build/sphinx/html
      - name: Run doctests
        run: python setup.py build_sphinx -b doctest

customer_notebooks:
    name: Customer Notebooks
    runs-on: ubuntu-18.04
    needs: eval_changes
    if: ${{ needs.eval_changes.outputs.nb_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install EconML
        run: pip install -e.[tf,plt]
      # Work around https://github.com/pypa/pip/issues/9542
      - name: Upgrade numpy
        run: pip install -U numpy~=1.21.0
      - name: Install Test Dependencies
        run: install pytest pytest-runner
      - name: Install Jupyter
        run: pip install jupyter jupyter-client
      - name: Install nb
        run: pip install nbconvert nbformat 
      - name: Install misc.   
        run: pip install seaborn xgboost tqdm
      - name: Unit Tests
        run: python setup.py pytest
        env: 
          PYTEST_ADDOPT: '-m "notebook"'
          NOTEBOOK_DIR_PATTERN: 'CustomerScenarios'
      - name: Publish Test Results **/test-results.xml
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results/**/*.xml
  