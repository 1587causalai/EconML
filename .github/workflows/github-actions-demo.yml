name: GitHub Actions Test
on: [push]
jobs:
  eval_changes:
    runs-on: ubuntu-latest  
    name: Test changed-files
    outputs:
      code_changes: ${{ steps.check_changes.outputs.code_changes }}
      doc_changes: ${{ steps.check_changes.outputs.doc_changes }}
      nb_changes: ${{ steps.check_changes.outputs.nb_changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: check modified files
        id: check_changes
        run: |
          echo "=============== list modified files ==============="
          editedFiles=`git diff --name-only HEAD^ --name-only`
          echo "$editedFiles"

          echo "========== check paths of modified files =========="
          codeChanges=false
          docChanges=false
          nbChanges=false
          for file in "$editedFiles"; do
            echo $file
            case $file in 
            README.md) continue ;;
            econml/_version.py) continue ;;
            prototypes/*) continue ;;
            images/*) continue ;;
            doc/*) docChanges=true ;;
            notebooks/*)  nbChanges=true ;;
            *) codeChanges=true ;;
            esac
          done 

          echo "========== Change Summary =========="
          echo "Code Changes"
          if $codeChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi
          echo "Doc Changes"
          if $docChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi
          echo "Notebook Changes"
          if $nbChanges; then 
            echo "True" 
          else 
            echo "False" 
          fi

          echo "set-output name=code_changes::test"
          echo "set-output name=doc_changes::$docChanges"
          echo "set-output name=nb_changes::$nbChanges"

  linting:
      runs-on: ubuntu-latest
      name: 'Linting'
      needs: eval_changes
      steps:
        - name: Print 
          run: echo ${{needs.eval_changes.outputs.code_changes}}
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Setup Python
          uses: actions/setup-python@v2
          with:
            python-version: 3.8
        - name: Install and Run pycodestyle
          run: 'pip install pycodestyle && pycodestyle econml'